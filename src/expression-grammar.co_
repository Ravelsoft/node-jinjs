class JinJSUnimplementedException extends Error
    -> super ...
class JinJSParseError extends Error 
    -> super ...


function make_expression (input, compilation_ctx, startRule) ->
    grammar = __grammar__
    grammar.compilation_ctx = compilation_ctx
    try
        return grammar.parse input, startRule
    catch e
        e.message = "Error in expression '#{input}' : #{e.message}"
        throw e

make_parse_rule = (rule_name) ->
    return (contents, ctx) -> make_expression contents, ctx, rule_name

parse_for = make_parse_rule \tag_for
parse_let = make_parse_rule \tag_let
parse_macro = make_parse_rule \tag_macro
parse_extends = make_expression
parse_block = make_parse_rule \tag_block
parse_import = make_parse_rule \tag_import
parse_string = make_parse_rule \string

exports <<< { make_expression, parse_for, parse_let, parse_macro, parse_extends, parse_block, parse_import, parse_string }

